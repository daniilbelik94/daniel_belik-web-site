/* css/base/_animations.css */

/* Анимация для глобального градиентного фона */
@keyframes gridGradientShift {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

@keyframes pulse {
    0% {
        opacity: 0.4;
        transform: scale(1);
    }

    50% {
        opacity: 0.7;
        transform: scale(1.02);
    }

    /* Увеличиваем масштаб для "дыхания" */
    100% {
        opacity: 0.4;
        transform: scale(1);
    }
}

/* Анимация для текстового градиента (будет использоваться в Hero) */
@keyframes textGradientClip {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

/* Анимация для "пишущей машинки" (базовая, может потребовать JS для динамики) */
@keyframes typing {
    from {
        width: 0;
    }

    to {
        width: 100%;
    }

    /* Это для одного слова, JS понадобится для смены слов */
}

@keyframes blink-caret {

    from,
    to {
        border-color: transparent;
    }

    50% {
        border-color: var(--secondary);
    }
}

/* Анимации для появления элементов при скролле (примеры) */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}



[data-animation] {
    /* Используем data-атрибут для выбора элементов */
    opacity: 0;
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    /* Плавный переход */
    transition-delay: var(--animation-delay, 0s);
    /* Задержка (будет управляться через JS) */
    will-change: opacity, transform;
    /* Оптимизация для браузера */
}

/* Сдвигаем элементы в зависимости от типа анимации */
[data-animation="fade-in-up"] {
    transform: translateY(30px);
    /* Начинаем снизу */
}

[data-animation="fade-in-left"] {
    transform: translateX(-30px);
    /* Начинаем слева */
}

[data-animation="fade-in-right"] {
    transform: translateX(30px);
    /* Начинаем справа */
}

[data-animation="zoom-in"] {
    transform: scale(0.95);
    /* Начинаем чуть меньше */
}

[data-animation="fade-in"] {
    transform: translateY(0);
    /* Без сдвига, только прозрачность */
}


/* Конечное состояние - когда элемент видим */
[data-animation].is-visible {
    opacity: 1;
    transform: translateY(0) translateX(0) scale(1);
    /* Возвращаем на место */
}